version: '3'

networks:
  opnform-net:
  caddy_network:
    external: true

services:
  api: &api
    image: jhumanj/opnform-api:latest
    environment: &api-environment  # Add this anchor
      DB_HOST: db
      REDIS_HOST: redis
      DB_DATABASE: ${DB_DATABASE:-forge}
      DB_USERNAME: ${DB_USERNAME:-forge}
      DB_PASSWORD: ${DB_PASSWORD:-forge}
      DB_CONNECTION: ${DB_CONNECTION:-pgsql}
      FILESYSTEM_DISK: local
      LOCAL_FILESYSTEM_VISIBILITY: public
    env_file: 
    - ./api/.env
    volumes:
    - opnform_storage:/usr/share/nginx/html/storage:rw
    networks:
      - opnform-net

  api-worker:
    image: jhumanj/opnform-api:latest
    command: php artisan queue:work
    environment:
      <<: *api-environment
      IS_API_WORKER: "true"
    env_file: 
    - ./api/.env
    volumes:
    - opnform_storage:/usr/share/nginx/html/storage:rw
    networks:
      - opnform-net

  ui:
    image: jhumanj/opnform-client:latest
    env_file: 
    - ./client/.env
    networks:
      - opnform-net

  redis:
    image: redis:7
    networks:
      - opnform-net

  db:
    image: postgres:16
    environment:
      POSTGRES_DB: ${DB_DATABASE:-forge}
      POSTGRES_USER: ${DB_USERNAME:-forge}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-forge}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - opnform-net

  forms-ingress:
    image: nginx:1
    volumes:
      - ./docker/nginx.conf:/etc/nginx/templates/default.conf.template
    networks:
      - caddy_network
      - opnform-net

volumes:
  postgres-data:
  opnform_storage: